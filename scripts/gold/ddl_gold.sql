/*
================================================================================
üìù Notes for Gold Layer Views
================================================================================
1. Naming Convention:
   - All views are created in schema `gold` to represent curated data (ready for analytics).
   - Dimension tables: `gold.dim_*`
   - Fact tables: `gold.fact_*`

2. Keys:
   - `customer_key` and `product_key` are surrogate keys generated by ROW_NUMBER().
   - Business keys (`customer_id`, `product_id`, etc.) are kept for traceability.

3. Data Quality:
   - Gender: CRM (`ci.cst_gndr`) is treated as the master source. 
     If missing/invalid (`n/a`), fallback to ERP (`ca.gen`), else set to `'n/a'`.
   - Products: Only active products are included (`prd_end_dt IS NULL`).
   - Foreign key validation: `fact_sales` must always reference valid `dim_customers` and `dim_products`.

4. Business Rule:
   - `sales_amount` should equal `quantity * price`. 
     Source column `sls_sales` is used, but may be cross-checked for consistency.

5. Maintenance:
   - Run `SELECT DISTINCT gender FROM gold.dim_customers` after creation 
     to validate standardized gender values.
   - Check referential integrity in `fact_sales` with LEFT JOIN diagnostics at the end of this file.

Author: Linh
Last Updated: [dd/MM/yyyy]
================================================================================
*/

CREATE VIEW gold.dim_customers AS
SELECT  ROW_NUMBER() OVER (ORDER BY ci.cst_id) as customer_key,
		ci.cst_id as customer_id,
		ci.cst_key as customer_number,
		ci.cst_firstname as first_name,
		ci.cst_lastname as last_name,
		ci.cst_marital_status as marital_status,
		la.cntry as country,
		CASE WHEN ci.cst_gndr != 'n/a' THEN ci.cst_gndr --CRM is the Master	for gender info
			ELSE COALESCE(ca.gen, 'n/a') --
		END AS gender,
		ca.bdate as birthdate,
		ci.cst_create_date as create_date
FROM silver.crm_cust_info ci
LEFT JOIN silver.erp_cust_az12 ca
ON ci.cst_key = ca.cid
LEFT JOIN silver.erp_loc_a101 la
ON ci.cst_key = la.cid

Select distinct gender From gold.dim_customers

CREATE VIEW gold.dim_products AS
SELECT
CAST(ROW_NUMBER() OVER(ORDER BY pn.prd_start_dt, pn.prd_key) as NVARCHAR) as product_key,
pn.prd_id as product_id,
pn.prd_key as product_number,
pn.prd_nm as product_name,
pn.cat_id as category_id,
pc.cat as category,
pc.subcat as subcategory,
pc.maintenance,
pn.prd_cost as cost,
pn.prd_line as product_line,
pn.prd_start_dt as start_date
FROM silver.crm_prd_info pn
LEFT JOIN silver.erp_px_cat_g1v2 pc ON pn.cat_id = pc.id
WHERE prd_end_dt IS NULL --Filter out all historical data

CREATE VIEW gold.fact_sales as
SELECT
sd.sls_ord_num as order_number,
pr.product_key as product_key,
cus.customer_key as customer_key,
sd.sls_order_dt as order_date,
sd.sls_ship_dt as ship_date,
sd.sls_due_dt as due_date,
sd.sls_sales as sales_amount,
sd.sls_quantity as quantity,
sd.sls_price 
FROM silver.crm_sales_details sd
LEFT JOIN gold.dim_products pr ON sd.sls_prd_key = pr.product_number
LEFT JOIN gold.dim_customers cus ON sd.sls_cust_id = cus.customer_id



-- Foreign Key Integrity (Dimensions)
Select *
From gold.fact_sales f
LEFT JOIN gold.dim_customers cus ON f.customer_key = cus.customer_key
LEFT JOIN gold.dim_products pro On f.product_key = pro.product_key
where pro.product_key is null
